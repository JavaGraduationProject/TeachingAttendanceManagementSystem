package ${package}.service.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;

#foreach ($column in $columns)
	#if($column.attrname ==  'user')
            import com.learn.service.SysUserService;
	#end
#end


import ${package}.dao.${className}Dao;
import ${package}.entity.${className}Entity;
import ${package}.service.${className}Service;
import ${package}.service.*;



@Service("${classname}Service")
public class ${className}ServiceImpl implements ${className}Service {
	@Autowired
	private ${className}Dao ${classname}Dao;

	#foreach ($column in $columns)
		#if($column.attrname ==  'user')
            @Autowired
            private SysUserService sysUserService;

		#elseif($column.attrType ==  'Long' && $column.attrname !=  'id')
            @Autowired
            private  ${column.attrName}Service  ${column.attrname}Service;

		#end


	#end


	
	@Override
	public ${className}Entity queryObject(${pk.attrType} ${pk.attrname}){
			${className}Entity entity = ${classname}Dao.queryObject(${pk.attrname});

	#foreach ($column in $columns)
		#if($column.attrname ==  'user')
            if (this.sysUserService.queryObject(entity.getUser()) != null)
                entity.setSysUserEntity(this.sysUserService.queryObject(entity.getUser()));

		#elseif($column.attrType ==  'Long' && $column.attrname !=  'id')

            if ( entity.get${column.attrName}() != null &&  this.${column.attrname}Service.queryObject(entity.get${column.attrName}()) != null)
                entity.set${column.attrName}Entity(this.${column.attrname}Service.queryObject(entity.get${column.attrName}()));

		#end
	#end

		return entity;
	}
	
	@Override
	public List<${className}Entity> queryList(Map<String, Object> map){
        List<${className}Entity> list = ${classname}Dao.queryList(map);
        for(${className}Entity entity : list){
			#foreach ($column in $columns)
				#if($column.attrname ==  'user')
                    if (this.sysUserService.queryObject(entity.getUser()) != null)
                        entity.setSysUserEntity(this.sysUserService.queryObject(entity.getUser()));

				#elseif($column.attrType ==  'Long' && $column.attrname !=  'id')

                    if ( entity.get${column.attrName}() != null &&  this.${column.attrname}Service.queryObject(entity.get${column.attrName}()) != null)
                        entity.set${column.attrName}Entity(this.${column.attrname}Service.queryObject(entity.get${column.attrName}()));

				#end
			#end
		}
		return list;
	}
	
	@Override
	public int queryTotal(Map<String, Object> map){
		return ${classname}Dao.queryTotal(map);
	}
	
	@Override
	public void save(${className}Entity ${classname}){
		${classname}Dao.save(${classname});
	}
	
	@Override
	public void update(${className}Entity ${classname}){
		${classname}Dao.update(${classname});
	}
	
	@Override
	public void delete(${pk.attrType} ${pk.attrname}){
		${classname}Dao.delete(${pk.attrname});
	}
	
	@Override
	public void deleteBatch(${pk.attrType}[] ${pk.attrname}s){
		${classname}Dao.deleteBatch(${pk.attrname}s);
	}
	
}
